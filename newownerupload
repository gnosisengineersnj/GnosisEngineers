var express = require('express');
var http = require('http');
var GAPI = require('node-gcs').gapitoken;
var GCS = require('node-gcs');
var multiparty = require('multiparty');
var Mimer = require('mimer');
var app = express();
var path = require('path');
app.set('port', 8080);
app.set('views', __dirname + '/views');
app.set('view engine', 'jade');
app.use(express.static(path.join(__dirname, 'public')));
// Routes Starts
//Default shows Upload page
/*app.get('/', function(req, res) {
  res.render('default');
});
*/
//Upload Files using Multiparty Stream writing
app.post('/upload', function(req, res) {

    var form = new multiparty.Form();
    console.log('********File Upload Started********');
    form.on('part', function(part){
        console.log('part:: '+part);
        var fileType = '.' + part.filename.split('.').pop().toLowerCase();
        var tempFileName = part.filename.split('.')[0];
      /*  var fileName = tempFileName+Math.random().toString(36).slice(10) + fileType;*/
         var fileName= uploadtoto.txt;
        console.log('fileName:: '+fileName);
        console.log('fileType:: '+fileType);
        // clear out the part's headers to prevent conflicting data being passed to GCS
        part.headers = null;
        var gapi = new GAPI({
            iss: '598095626234-50hni6fpcd52pprdq9pkrruetv7b2mi2@developer.gserviceaccount.com',
            scope: 'https://www.googleapis.com/auth/devstorage.full_control',
            keyFile: path.join(__dirname, 'keys/googlekey.pem')
        },
        function(err) {
            if (err) { console.log('Google cloud authorization error: ' + err); }
            //Set Headers explicitly
            var headers = {
                'Content-Type': Mimer(fileType),
                'Transfer-Encoding': 'Chunked',
                'x-goog-acl': 'public-read'
            };

            var gcs = new GCS(gapi);




            gcs.putStream(part, 'testbucket12', '/'  + fileName, headers, function(gerr, gres){
                if (gerr) {
                        console.error(gerr);
                        res.redirect('back');
                } else {
                        console.log("Your file uploaded successfully!!");
                        res.redirect('back');
                }
            });
        });
     });
        form.parse(req);
 });


// Start the app server
http.createServer(app).listen(app.get('port'), function(){
  console.log("Express server listening on port " + app.get('port'));
});
